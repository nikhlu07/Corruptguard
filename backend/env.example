# CorruptGuard Backend Environment Configuration
# Copy this file to .env and update values as needed

# ================================================================================
# BASIC SETTINGS
# ================================================================================
HOST=127.0.0.1
PORT=8000
ENVIRONMENT=development
DEBUG=true

# ================================================================================
# AUTHENTICATION MODE
# ================================================================================
# Set to true for demo mode, false for production Internet Identity
demo_mode=true

# ================================================================================
# INTERNET IDENTITY & ICP CONFIGURATION
# ================================================================================
# Network selection: local, testnet, mainnet
ICP_NETWORK=local

# Network URLs (auto-configured based on ICP_NETWORK)
# ICP_NETWORK_URL=http://127.0.0.1:4943  # Local
# ICP_NETWORK_URL=https://ic0.testnet.app  # Testnet  
# ICP_NETWORK_URL=https://ic0.app  # Mainnet

# Canister IDs (get from dfx canister id <canister_name>)
ICP_CANISTER_ID=rdmx6-jaaaa-aaaah-qcaiq-cai
ICP_FRAUD_ENGINE_CANISTER_ID=rdmx6-jaaaa-aaaah-qcaiq-cai

# Internet Identity Provider URLs
# II_PROVIDER_URL=https://identity.ic0.app  # Mainnet
# II_PROVIDER_URL=https://identity.ic0.testnet.app  # Testnet
# II_PROVIDER_URL=http://127.0.0.1:4943/?canisterId=rdmx6-jaaaa-aaaah-qcaiq-cai  # Local

# Root key fetching (true for local/testnet, false for mainnet)
ICP_FETCH_ROOT_KEY=true

# Identity PEM file path (optional, for authenticated canister calls)
ICP_IDENTITY_PEM_PATH=

# ================================================================================
# DATABASE CONFIGURATION
# ================================================================================
# SQLite (default for development)
database_url=sqlite:///./corruptguard.db

# PostgreSQL (for production)
# database_url=postgresql://username:password@localhost/corruptguard

# ================================================================================
# JWT SECURITY
# ================================================================================
# Generate a secure random key: python -c "import secrets; print(secrets.token_urlsafe(32))"
JWT_SECRET_KEY=your-super-secret-jwt-key-change-this-in-production
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30

# ================================================================================
# CORS & SECURITY
# ================================================================================
# Allowed origins (comma-separated)
CORS_ORIGINS=["http://localhost:5173", "http://localhost:3000"]
cors_allow_credentials=true
cors_allow_methods=["GET", "POST", "PUT", "DELETE", "OPTIONS", "PATCH"]
cors_allow_headers=["*"]

# ================================================================================
# RATE LIMITING
# ================================================================================
rate_limit_enabled=true
rate_limit_requests=100
rate_limit_window=60

# ================================================================================
# LOGGING
# ================================================================================
LOG_LEVEL=INFO
LOG_FILE=corruptguard.log

# ================================================================================
# FRAUD DETECTION
# ================================================================================
# Demo mode settings
demo_auto_approve=true
demo_skip_verification=true

# Fraud engine configuration
FRAUD_RULES_COUNT=10
FRAUD_ML_ENABLED=true
FRAUD_HISTORICAL_DATA_POINTS=1000

# ================================================================================
# DEPLOYMENT SPECIFIC
# ================================================================================
# For production deployment
# ENVIRONMENT=production
# DEBUG=false
# demo_mode=false
# ICP_NETWORK=mainnet
# ICP_FETCH_ROOT_KEY=false
# database_url=postgresql://user:pass@localhost/corruptguard
# CORS_ORIGINS=["https://yourdomain.com"]
# rate_limit_requests=1000
